Julia wrapper TODO:

- Create eCode protocol
- More flexibility in data storage?
- A way to control the config file?
- Always record from both channels


GeKo.c TODO:

- Create stimulus array from stimgen
- Save data to binary file
- Take sampling rate and conversion factors from config file
- Add protection for stimuli that are too big to load
- An exception of use: "debugging" should allow for continuous acquisition and data visualization, while sending some outputs
    - Maybe this should be an extra tool? Something like: GeKo scope?



TEST
- Acquire from all 16 analog inputs - see limits
- Check how driver handles data unloading

USAGE OF GEKO:
Config file:
    .config
    Sampling rate
    Name of device
    Nr of active channels
    Label of ai and ao for each channel
    Conversion factors
GeKo.c
    geko [-conf] stim(file or array) -rep -isi [-suffix] [-supressPrompt]
    geko [-c] -r -i -v -s
    at the end of protocol, prompt user for notes
    zero outputs after stim
    Integration with stimgen
    data storage file format and organization
        binary (.dat)
        readFile - simple plotting (Julia, Python, Matlab)
        230201163200.dat
        .230201163200
            geko.ini
            wtv.stim
            annotation (str given to GeKo, suffix, notes)